@model AspNetIdentity.Models.PerfilModel
<!DOCTYPE html>
<html>
<head>
    @{
        ViewBag.Title = "Crear";
    }
    @section Scripts {
        <script src="~/Scripts/jquery-3.3.1.min.js"></script>
        <!-- Optional JavaScript -->
        <!-- jQuery first, then Popper.js, then Bootstrap JS -->
        <script src="~/Scripts/popper.min.js"></script>
        <script src="~/Scripts/bootstrap.js"></script>
        <!-- Material Design for Bootstrap fonts and icons -->
        <link href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700|Material+Icons" rel="stylesheet">
        <link href="https://fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">
        <!-- Material Design for Bootstrap CSS -->
        <link href="~/Content/bootstrap.css" rel="stylesheet" />
        <link href="~/Content/mdb.css" rel="stylesheet" />
        <script src="~/Scripts/mdb.js"></script>
        <script type="text/javascript">
    $(document).ready(function () {
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ListArea")', // we are calling json method
            dataType: 'json',
            success: function(states) {
                $.each(states, function (i, state) {
                    $("#ID_CT_AREA").append('<option value="' + state.Value + '">' +state.Text + '</option>');
                });
            },
            error: function (ex) {
                console.log(ex.responseText);
            }
        });
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ListPerfil")', // we are calling json method
            dataType: 'json',
            success: function(states) {

                $.each(states, function (i, state) {
                    $("#REPORTA").append('<option value="' + state.Value + '">' +state.Text + '</option>');
                });
            },
            error: function (ex) {
                console.log(ex.responseText);
            }
        });
        $.ajax({
            type: 'POST',
            url: '@Url.Action("ListPerfil")', // we are calling json method
            dataType: 'json',
            success: function(states) {
                $.each(states, function (i, state) {
                    $("#SUPERVISA").append('<option value="' + state.Value + '">' +state.Text + '</option>');
                });
            },
            error: function (ex) {
                console.log(ex.responseText);
            }
        });
        $("#ID_CT_AREA").change(function () {
            $("#ID_CT_SUB_AREA").empty();

            $.ajax({
                type: 'POST',
                url: '@Url.Action("ListSubAreaId")', // we are calling json method
                dataType: 'json',
                data: { IdP: $("#ID_CT_AREA").val() },
                success: function (states) {
                    $.each(states, function (i, state) {
                            $("#ID_CT_SUB_AREA").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    console.log(ex.responseText);
                }
            });
            console.log("ok");
        return false;
        });
    });
        </script>

    }
    <title> @ViewBag.Title </title>
</head>
<body>
    <div class="card mb-4 wow fadeIn">

        <!--Card content-->
        <div class="card-body d-sm-flex justify-content-between">
            <h3 class="card-title">Crear Perfil</h3>
            <p class="card-text">Perfil</p>
        </div>

    </div>
    @Html.AntiForgeryToken()
    <div class="row wow fadeIn">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header"> </div>
                <div class="card-body">
                    @using (Html.BeginForm())
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            <div class="form-group">
                                @Html.LabelFor(model => model.NOMBRE, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.NOMBRE, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.NOMBRE, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ID_CT_AREA, htmlAttributes: new { @class = "control-label col-md-4" })
                                <div class="col-md-10">
                                    @*@Html.DropDownList("ID_CT_PAIS", ViewData["ID_CT_PAIS"] as IEnumerable<SelectListItem>)*@
                                    @Html.DropDownList("ID_CT_AREA", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_CT_AREA, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ID_CT_SUB_AREA, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @*@Html.EditorFor(model => model.ID_CT_SUB_AREA, new { htmlAttributes = new { @class = "form-control" } })*@
                                    @Html.DropDownList("ID_CT_SUB_AREA", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ID_CT_SUB_AREA, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.REPORTA, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("REPORTA", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.REPORTA, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.SUPERVISA, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("SUPERVISA", new SelectList(string.Empty, "Value", "Text"), "Seleccione", new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.SUPERVISA, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.OBJETIVO, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.OBJETIVO, new { htmlAttributes = new { @class = "form-control" } })
                                    @Html.ValidationMessageFor(model => model.OBJETIVO, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    @Html.EditorFor(model => model.NombreArea, new { htmlAttributes = new { @class = "form-control", @Style = "display:none", @Value = "ok" } })
                                    @Html.EditorFor(model => model.NombreSubArea, new { htmlAttributes = new { @class = "form-control", @Style = "display:none", @Value = "ok" } })
                                    @Html.EditorFor(model => model.NombreReporta, new { htmlAttributes = new { @class = "form-control", @Style = "display:none", @Value = "ok" } })
                                    @Html.EditorFor(model => model.NombreSupervisa, new { htmlAttributes = new { @class = "form-control", @Style = "display:none", @Value = "ok" } })
                                    <input type="submit" value="Create" class="btn btn-default" />
                                </div>
                            </div>
                        </div>
                    }
                    <div>

                    </div>

                </div>
            </div>
        </div>
    </div>

</body>
</html>


